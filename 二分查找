744. Find Smallest Letter Greater Than Target
Given a list of sorted characters letters containing only lowercase letters, and given a target letter target, find the smallest element in the list that is larger than the given target.

Letters also wrap around. For example, if the target is target = 'z' and letters = ['a', 'b'], the answer is 'a'.

Examples:
Input:
letters = ["c", "f", "j"]
target = "a"
Output: "c"

Input:
letters = ["c", "f", "j"]
target = "c"
Output: "f"

Input:
letters = ["c", "f", "j"]
target = "d"
Output: "f"

Input:
letters = ["c", "f", "j"]
target = "g"
Output: "j"

Input:
letters = ["c", "f", "j"]
target = "j"
Output: "c"

Input:
letters = ["c", "f", "j"]
target = "k"
Output: "c"
Note:
letters has a length in range [2, 10000].
letters consists of lowercase letters, and contains at least 2 unique letters.
target is a lowercase letter.
code：
class Solution(object): #查看leetcode上的解
    def nextGreatestLetter(self, letters, target):
        """
        :type letters: List[str]
        :type target: str
        :rtype: str
        """
        lh = len(letters)
        l = 0
        h = lh - 1
        while(l<=h):
            m = (l+h)/2
            if letters[m] == target:
                l = m + 1 #attention这个地方，在教科书般的框架里面也是可用的
            elif letters[m] <target:
                l = m + 1
            else:
                h = m - 1
        if h > 0:  #最后的判断要在上边的那个基础上
            if letters[h] > target:
                return letters[h]
        if l > lh-1:
            return letters[0]
        else: #letters[l] >target:
            return letters[l]
        
