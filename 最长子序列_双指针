524. Longest Word in Dictionary through Deleting
Given a string and a string dictionary, find the longest string in the dictionary that can be formed by deleting some characters of the given string. If there are more than one possible results, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.

Example 1:
Input:
s = "abpcplea", d = ["ale","apple","monkey","plea"]

Output: 
"apple"
Example 2:
Input:
s = "abpcplea", d = ["a","b","c"]

Output: 
"a"
Note:
All the strings in the input will only contain lower-case letters.
The size of the dictionary won't exceed 1,000.
The length of all the strings in the input won't exceed 1,000
code:
class Solution(object):  
    def findLongestWord(self, s, d):
        """
        :type s: str
        :type d: List[str]
        :rtype: str
        """
        max_str = ""
        max_l = 0
        for i in d:
            if len(i) > max_l or (len(i) == max_l and i<max_str):
                if self.is_instr(s,i):
                    max_l = len(i)
                    max_str = i
            else:
                continue
        return max_str
    
    def is_instr(self,s,s1):
        l1 = len(s)
        l2 = len(s1)
        i = 0
        j = 0
        while(i<l1 and j<l2): #这个地方注意一下你leetcode上的报错就是因为一个前后关系没考虑到，最好写到一起
            if s[i] != s1[j]:
                i = i + 1
            else:
                i = i+1
                j = j + 1
        return j==l2
                
