class Solution(object):
    def findDisappearedNumbers(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        l = len(nums)
        for i in range(l):
            k = nums[i]
            ind = k-1
            if k == 0:
                continue
            if i == ind:
                continue
            nums[i] = 0
            t = nums[ind]
            nums[ind]=k
            k = t
            while(k!=0 and k!=nums[k-1]):
                t = nums[k-1]
                nums[k-1] = k
                k = t
        ans = []
        for i in range(l):
            if nums[i]==0:
                ans.append(i+1)
        return ans

a = [4,3,2,7,8,2,3,1]
x = Solution()
print(x.findDisappearedNumbers(a))

class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        vector<int> res;
        if(nums.empty()) return nums;
        for(int i=0;i<nums.size();i++)
        {
            int index=(nums[i]-1)%nums.size();
            nums[index]+=nums.size();
        }
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]<=nums.size())
                res.push_back(i+1);
        }
        return res;
    }
};

作者：haydenmiao
链接：https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array/solution/cyuan-shu-zu-cao-zuo-by-haydenmiao/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
